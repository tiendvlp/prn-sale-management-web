@model Estore.Areas.Admin.ViewModels.Order.CreateOrderViewModel

@{
    ViewBag.Title = "Create Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <h1>@ViewBag.Title</h1>
    <div class="col-md-12" style="height:60px"></div>
    <div class="row offset-md-3">
        <div class="col-md-10">
            <section>
                <section>
                    @if (Model.OrderDetails != null && Model.OrderDetails.Count() > 0)
                    {
                        @using (Html.BeginForm("Create", "Orders", FormMethod.Post, new { Id = "FormF" }))
                        {
                            @Html.EditorFor(expression: (x => x.Order), templateName: "_OrderEditorTemplate")

                            <div class="p-4 border rounded">
                                <table class="table table-striped table-bordered" id="tblData" style="width:100%">
                                    <colgroup>
                                        <col span="1" style="width: 50%;">
                                        <col span="1" style="width: 30%;">
                                        <col span="1" style="width: 20%;">
                                    </colgroup>
                                    <thead>
                                        <tr class="table-info">
                                            <th>Product name</th>
                                            <th>Price</th>
                                            <th>Quantity</th>
                                        </tr>
                                    </thead>
                                    <tbody>

                                        @{double totalPrice = 0; int i = 0;}
                                        @foreach (var detail in Model.OrderDetails)
                                        {
                                            totalPrice += detail.ProductPrice;
                                            @Html.HiddenFor(m => m.OrderDetails[i].ProductId)
                                            @Html.HiddenFor(m => m.OrderDetails[i].ProductName)
                                            @Html.HiddenFor(m => m.OrderDetails[i].ProductPrice)
                                            <tr>
                                                <td>
                                                    @detail.ProductName
                                                </td>
                                                <td>
                                                    @detail.ProductPrice
                                                </td>
                                                <td>
                                                    @Html.EditorFor(m => m.OrderDetails[i].Quantity)
                                                </td>
                                            </tr>
                                            i++;
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="md-12" style="height: 20px"></div>
                            <div>
                                <h4 class="text-warning">Price: @totalPrice $</h4>
                            </div>
                            <div class="offset-md-5 form-group">
                                <button type="submit" runat="server" class="btn btn-primary">Create</button>
                            </div>
                        }

                    }
                </section>
            </section>
        </div>
    </div>
</body>
@section Scripts {
    <script>let orderDetailsCount = 0;</script>
    @if ((Model.OrderDetails != null || Model.OrderDetails.Count() > 0) && !Model.AllProductsQuantitySetToNone)
    {
        <script>
                orderDetailsCount = @Html.Raw(Model.OrderDetails.Count());
        </script>
    }
    <script>

        let isShowCancelButton = ("@Html.Raw(Model.AllProductsQuantitySetToNone)" === "True")

        let errorMessage = "@Html.Raw(Model.ErrorMessage)";
        let isSuccess = ("@Html.Raw(Model.IsSuccess)" === "True");

        if (orderDetailsCount == 0) {
            swal({
                title: "Notification",
                text: "Can not create order because your products is empty",
                icon: "error",
                buttons: isShowCancelButton,
                dangerMode: true
            }).then((isOK) => {
                console.log("isOk" + isOK);
                if (isOK || !isShowCancelButton) {
                    window.location.replace("/admin/products");
                }
            });
        }

        if (errorMessage) {
        swal({
        title: "Notification",
        text: errorMessage,
        icon: "error",
        dangerMode: true
        }).then((isOK) => {

        });
        } else if (isSuccess) {
        swal({
        title: "Notification",
        text: "Congrate !!! your order has been saved",
        icon: "success",
        dangerMode: false
        }).then((isOK) => {

        });
        }

    </script>
    <partial name="_ValidationScriptsPartial" />
}
</html>



